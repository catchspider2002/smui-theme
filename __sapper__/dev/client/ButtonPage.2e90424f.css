.svelte-1aw35an .myClass{text-decoration:underline !important}.svelte-1aw35an .mdc-button, .smui-button__group{margin-bottom:0.4em}.svelte-1aw35an .smui-button__group .mdc-button{margin-bottom:0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */